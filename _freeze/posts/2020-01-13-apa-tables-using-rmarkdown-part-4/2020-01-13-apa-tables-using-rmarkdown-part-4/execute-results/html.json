{
  "hash": "29b1666a7cfa4a0e0fc0994f793251be",
  "result": {
    "markdown": "---\ntitle: 'APA Tables using RMarkdown: Part 4'\nauthor: Andy\ndate: '2020-01-13'\ncategories:\n  - Markdown\n  - R\n  - Writing\n---\n\n\nThis is the fourth part of a short blog series I am writing to re-create some of the sample tables found in the 7th edition *APA Publication Manual*. In this post I will attempt to mimic Table 7.17 (p. 220). To do so, I will incorporate many ideas that I covered in the [first](https://www.datadreaming.org/post/apa-tables-using-rmarkdown/), [second](https://www.datadreaming.org/post/apa-tables-using-rmarkdown-part-2/), and [third](https://www.datadreaming.org/post/apa-tables-using-rmarkdown-part-3/) of these posts. \n\n<figure>\n<img src=\"IMG_2901.JPG\" alt=\"\" width=\"70%\" />\n<figcaption style=\"text-align:center;\">Table 7.17 from the 7th edition of the APA Publication Manual (p. 220).</figcaption>\n</figure>\n\nRather than re-create this table using the data from Table 7.17, I will illustrate mimicing this table with summary information gleaned from a different dataset.\n\n# My Process\n\nI will again render to PDF and set up the YAML to import the **caption** package (LaTeX) and set up the APA caption formatting.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"Untitled\"\nauthor: \"Andrew Zieffler\"\ndate: \"1/12/2020\"\noutput: pdf_document\nheader-includes:\n   - \\usepackage{caption}\n   - \\captionsetup[table]{textfont={it}, labelfont={bf}, singlelinecheck=false, labelsep=newline}\n---\n```\n:::\n\n\n\nIn the RMarkdown body, I will load a few packages and also import a data set that I will use to create the summary values akin to those in Table 7.10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(broom)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(tidyverse)\n\n# Import data\nmn = read_csv(\"https://raw.githubusercontent.com/zief0002/rustic-penguin/main/data/mn-schools.csv\") |>\n  mutate(public = if_else(sector == \"Public\", 1, 0))\n\n# View data\nhead(mn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  name                               grad sector    sat tuition public\n  <chr>                             <dbl> <chr>   <dbl>   <dbl>  <dbl>\n1 Augsburg College                   65.2 Private  1030    39.3      0\n2 Bethany Lutheran College           52.6 Private  1065    30.5      0\n3 Bethel University, Saint Paul, MN  73.3 Private  1145    39.4      0\n4 Carleton College                   92.6 Private  1400    54.3      0\n5 College of Saint Benedict          81.1 Private  1185    43.2      0\n6 Concordia College at Moorhead      69.4 Private  1145    36.6      0\n```\n:::\n:::\n\n\nThe data in were collected from http://www.collegeresults.org and contain 2011 institutional data for n=33 Minnesota colleges and universities. The codebook is available [here](http://zief0002.github.io/rustic-penguin/codebooks/mn-schools.html).\n\nWe need to compute the regression results from fitting an OLS model. Here I will predict variation in graduation rates using the other variables in the dataset. I will also use the `tidy()` output from the **broom** package to obtain the coefficient-level output that is summarized in the table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit model\nlm.1 = lm(grad ~ 1 + public + sat + tuition, data = mn)\n\n# Obtain coefficient-level summaries\ntab_01 = tidy(lm.1)\n\n# View table\ntab_01\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  term        estimate std.error statistic     p.value\n  <chr>          <dbl>     <dbl>     <dbl>       <dbl>\n1 (Intercept)  -68.3     12.6       -5.44  0.00000755 \n2 public        -0.647    4.72      -0.137 0.892      \n3 sat            0.104    0.0159     6.54  0.000000364\n4 tuition        0.470    0.242      1.94  0.0617     \n```\n:::\n:::\n\n\nWe also need to obtain the limits of the confidence intervals. We can simply take the estimate and add/subtract two standard errors to get these limits.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute confidence limits\ntab_01 = tab_01 %>%\n  mutate(\n    LL = estimate - 2*std.error,\n    UL = estimate + 2*std.error\n  )\n\n# View table\ntab_01\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 7\n  term        estimate std.error statistic     p.value       LL      UL\n  <chr>          <dbl>     <dbl>     <dbl>       <dbl>    <dbl>   <dbl>\n1 (Intercept)  -68.3     12.6       -5.44  0.00000755  -93.4    -43.2  \n2 public        -0.647    4.72      -0.137 0.892       -10.1      8.78 \n3 sat            0.104    0.0159     6.54  0.000000364   0.0721   0.136\n4 tuition        0.470    0.242      1.94  0.0617       -0.0135   0.953\n```\n:::\n:::\n\n\nNow we just arrange the columns in the order we want to create the table and also re-name the elements in the `term` column to correspond to the text we want in the table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select columns\ntab_01 = tab_01 %>%\n  select(\n    term, estimate, std.error, LL, UL, p.value\n  ) %>%\n  mutate(\n    term = c(\"Constant\", \"Sector$^a$\", \"Median SAT score\", \"Tuition$^b$\")\n  )\n\n# View table\ntab_01\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 6\n  term             estimate std.error       LL      UL     p.value\n  <chr>               <dbl>     <dbl>    <dbl>   <dbl>       <dbl>\n1 Constant          -68.3     12.6    -93.4    -43.2   0.00000755 \n2 Sector$^a$         -0.647    4.72   -10.1      8.78  0.892      \n3 Median SAT score    0.104    0.0159   0.0721   0.136 0.000000364\n4 Tuition$^b$         0.470    0.242   -0.0135   0.953 0.0617     \n```\n:::\n:::\n\n\n\n\nI will then pipe this into the `kable()` function to set the column names, column alignment, and table caption. The `digits=` argument is included to round the values in each column. (Since the first column is text we set this to `NA`.)\n\nI also employ similar **kableExtra** function from those introduced in [Part 1](https://www.datadreaming.org/post/apa-tables-using-rmarkdown/), [Part 2](https://www.datadreaming.org/post/apa-tables-using-rmarkdown-part-2/), and [Part 3](https://www.datadreaming.org/post/apa-tables-using-rmarkdown-part-3/) to make the table the full page width, include the footnote, center the header names, and increase the width of the first column, and add the top header row.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(\n  tab_01,\n  format = \"latex\",\n  booktabs = TRUE,\n  escape = FALSE,\n  col.names = c(\"\", \"\", \"\", \"$LL$\", \"$UL$\", \"\"),\n  align = c(\"l\", \"c\", \"c\", \"c\", \"c\", \"c\"),\n  digits = c(NA, 3, 3, 3, 3, 3),\n  caption = \"Regression Coefficients of Institutional Predictors of Graduation Rates\"\n  ) %>%\n  kable_styling(full_width = TRUE) %>%\n  footnote(\n    general_title = \"Note.\",\n    general = \"$N=33$. $^a$0 = private schools and 1 = public schools. $^b$Tuition is measured in thousands of dollars.\",\n    footnote_as_chunk = TRUE,\n    escape = FALSE\n    ) %>%\n  row_spec(row = 0, align = \"c\") %>%\n  column_spec(column = 1, width = \"1.5in\") %>%\n  add_header_above(\n    c(\"Variable\" = 1, \"$B$\" = 1, \"$SE$\" = 1, \"95\\\\\\\\% CI\" = 2, \"$p$\" = 1),\n    escape = FALSE\n  )\n```\n:::\n\n\n![](tbl-1.png){width=100%}\n\n\nWe need to remove the extraneous mid-rules by altering the LaTeX syntax as we did in [Part 2](https://www.datadreaming.org/post/apa-tables-using-rmarkdown-part-2/).\n\n\n::: {.cell}\n\n```{.latex .cell-code}\n\\begin{table}\n\n\\caption{\\label{tab:}Regression Coefficients of Institutional Predictors of Graduation Rates}\n\\centering\n\\begin{tabu} to \\linewidth {>{\\raggedright\\arraybackslash}p{1.5in}>{\\centering}X>{\\centering}X>{\\centering}X>{\\centering}X>{\\centering}X}\n\\toprule\n\\multicolumn{1}{c}{Variable} & \\multicolumn{1}{c}{$B$} & \\multicolumn{1}{c}{$SE$} & \\multicolumn{2}{c}{95\\% CI} & \\multicolumn{1}{c}{$p$} \\\\\n\\cmidrule(l{3pt}r{3pt}){4-5}\n\\multicolumn{1}{c}{} & \\multicolumn{1}{c}{} & \\multicolumn{1}{c}{} & \\multicolumn{1}{c}{$LL$} & \\multicolumn{1}{c}{$UL$} & \\multicolumn{1}{c}{}\\\\\n\\midrule\nConstant & -68.297 & 12.564 & -93.424 & -43.170 & 0.000\\\\\nSector$^a$ & -0.647 & 4.716 & -10.078 & 8.784 & 0.892\\\\\nMedian SAT score & 0.104 & 0.016 & 0.072 & 0.136 & 0.000\\\\\nTuition$^b$ & 0.470 & 0.242 & -0.014 & 0.953 & 0.062\\\\\n\\bottomrule\n\\multicolumn{6}{l}{\\textit{Note.} $N=33$. $^a$0 = private schools and 1 = public schools. $^b$Tuition is measured in thousands of dollars.}\\\\\n\\end{tabu}\n\\end{table}\n```\n:::\n\n\n\n![](tbl-2.png){width=100%}\n\n\n# Alternative Table\n\nAn alternative table puts the confidence intevral in a single column by putting the confidence limits in square brackets. This is akin to Table 7.16 (p. 219) in the 7th edition of the *APA Publication Manual*.\n\n<figure>\n<img src=\"IMG_2902.JPG\" alt=\"\" width=\"70%\" />\n<figcaption style=\"text-align:center;\">Table 7.16 from the 7th edition of the APA Publication Manual (p. 219).</figcaption>\n</figure>\n\nTo create this I will again use the `tidy()` function and create the confidence limits. I will then create a new column in the tidy output that concatenates the confidence limits and places them inside square brackets. Lastly I will select the columns I want for the table and set the text for the \"Variables\" column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get coefficient-level output\n# Create confidence limits\ntab_01 = tidy(lm.1) %>%\n  mutate(\n    LL = estimate - 2*std.error,\n    UL = estimate + 2*std.error\n  )\n\n# Put confidence limits inside square brackets\ntab_01$CI = paste0(\"[\", round(tab_01$LL, 2), \", \", round(tab_01$UL, 2), \"]\")\n\n# Get output for table\ntab_01 = tab_01 %>%\n  select(\n    term, estimate, std.error, statistic, p.value, CI\n  ) %>%\n  mutate(\n    term = c(\"Constant\", \"Sector$^a$\", \"Median SAT score\", \"Tuition$^b$\")\n  )\n\ntab_01\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 6\n  term             estimate std.error statistic     p.value CI              \n  <chr>               <dbl>     <dbl>     <dbl>       <dbl> <chr>           \n1 Constant          -68.3     12.6       -5.44  0.00000755  [-93.42, -43.17]\n2 Sector$^a$         -0.647    4.72      -0.137 0.892       [-10.08, 8.78]  \n3 Median SAT score    0.104    0.0159     6.54  0.000000364 [0.07, 0.14]    \n4 Tuition$^b$         0.470    0.242      1.94  0.0617      [-0.01, 0.95]   \n```\n:::\n:::\n\n\nFinally, I will use `kable()` and the **kableExtra** functionality to create the table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(\n tab_01,\n format = \"latex\",\n booktabs = TRUE,\n escape = FALSE,\n col.names = c(\"Variables\", \"$B$\", \"$SE$\", \"$t$\", \"$p$\", \"95\\\\% CI\"),\n align = c(\"l\", \"c\", \"c\", \"c\", \"c\", \"c\"),\n digits = c(NA, 2, 2, 2, 3, NA),\n caption = \"Regression Coefficients of Institutional Predictors of Graduation Rates\"\n ) %>%\n kable_styling(full_width = TRUE) %>%\n footnote(\n   general_title = \"Note.\",\n   general = \"$N=33$. $^a$0 = private schools and 1 = public schools. $^b$Tuition is measured in thousands  dollars.\",\n   footnote_as_chunk = TRUE,\n   escape = FALSE\n   ) %>%\n row_spec(row = 0, align = \"c\") %>%\n column_spec(column = 1, width = \"1.5in\") %>%\n column_spec(column = 6, width = \"1in\")\n```\n:::\n\n\n![](tbl-3.png){width=100%}\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}